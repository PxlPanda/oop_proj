from .segment import split_into_chars
from .ocr_model import CrnnOcrModel
from api.mongo_models import Symbol
from django.conf import settings
import os

def recognize_template(session):
    image_path = os.path.join(settings.MEDIA_ROOT, session.image_path)
    print("üìÇ –ü—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é:", image_path)
    print("üìÇ –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç?", os.path.exists(image_path))

    if not os.path.exists(image_path):
        print("‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–µ—Ä—ã–≤–∞—é.")
        return

    # –°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è
    char_cells = split_into_chars(image_path)
    print(f"üß© –°–µ–≥–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å–∏–º–≤–æ–ª–æ–≤: {len(char_cells)}")

    if not char_cells:
        print("‚ö†Ô∏è –ù–∏ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å split_into_chars().")
        return

    # OCR-–º–æ–¥–µ–ª—å
    ocr = CrnnOcrModel(weights_path='recognition/weights/crnn_weights.pth')
    print("üì¶ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ...")

    for x, y, w, h, roi in char_cells:
        try:
            char = ocr.predict(roi)
            print(f"‚Üí ROI ({x},{y}) ‚Üí '{char}'")
            s = Symbol.objects.create(
                session=session,
                x=x, y=y,
                width=w, height=h,
                label=char,
                is_corrected=False
            )
            print("‚úÖ –°–∏–º–≤–æ–ª —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", s.id)
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:", e)

    session.is_verified = False
    session.save()
    print("üéâ –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
